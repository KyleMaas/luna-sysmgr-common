<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>luna-sysmgr-common: HostArm Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">luna-sysmgr-common
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classHostArm.htm','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-slots">Protected Slots</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-static-methods">Static Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classHostArm-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">HostArm Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="HostArm_8h_source.htm">HostArm.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for HostArm:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classHostArm__inherit__graph.svg" width="792" height="360"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.htm">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for HostArm:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classHostArm__coll__graph.svg" width="1494" height="1374"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a target="top" href="graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab784efc88b45b4fe1e4442a1a6014304"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ab784efc88b45b4fe1e4442a1a6014304">HostArm</a> ()</td></tr>
<tr class="separator:ab784efc88b45b4fe1e4442a1a6014304"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd63610f5841ce45a06c2931ded82b77"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#acd63610f5841ce45a06c2931ded82b77">~HostArm</a> ()</td></tr>
<tr class="separator:acd63610f5841ce45a06c2931ded82b77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdb1270ae2387bc9240f2c70544025ef"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#afdb1270ae2387bc9240f2c70544025ef">init</a> (int w, int h)</td></tr>
<tr class="separator:afdb1270ae2387bc9240f2c70544025ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affcce2079c29465a3f80593711d68951"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#affcce2079c29465a3f80593711d68951">show</a> ()</td></tr>
<tr class="separator:affcce2079c29465a3f80593711d68951"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5984e1ef2b8f4a3ecd63bc8937bf1572"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a5984e1ef2b8f4a3ecd63bc8937bf1572">getNumberOfSwitches</a> () const </td></tr>
<tr class="separator:a5984e1ef2b8f4a3ecd63bc8937bf1572"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12cb409a58eddef07c289b6cd9b7618d"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a12cb409a58eddef07c289b6cd9b7618d">readHidEvents</a> (int fd, struct input_event *eventBuf, int bufSize)</td></tr>
<tr class="separator:a12cb409a58eddef07c289b6cd9b7618d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9b1444ba6e156f9dca62ab38ee024e2"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ab9b1444ba6e156f9dca62ab38ee024e2">hardwareName</a> () const </td></tr>
<tr class="separator:ab9b1444ba6e156f9dca62ab38ee024e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e0fbcbf0780b2f06f1210c9f131d3d8"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a5e0fbcbf0780b2f06f1210c9f131d3d8">getInputControlALS</a> ()</td></tr>
<tr class="separator:a5e0fbcbf0780b2f06f1210c9f131d3d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d3055444437d6d317c5181ba82022e7"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a2d3055444437d6d317c5181ba82022e7">getInputControlBluetoothInputDetect</a> ()</td></tr>
<tr class="separator:a2d3055444437d6d317c5181ba82022e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e85c0d6aa734edc8d7492b0cde1c2d0"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a5e85c0d6aa734edc8d7492b0cde1c2d0">getInputControlProximity</a> ()</td></tr>
<tr class="separator:a5e85c0d6aa734edc8d7492b0cde1c2d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeec700787178cd33745ad94584007343"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#aeec700787178cd33745ad94584007343">getInputControlTouchpanel</a> ()</td></tr>
<tr class="separator:aeec700787178cd33745ad94584007343"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a358b89ea56aea621256391bda37d0b93"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a358b89ea56aea621256391bda37d0b93">getInputControlKeys</a> ()</td></tr>
<tr class="separator:a358b89ea56aea621256391bda37d0b93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac97a3815e42cfdec5b838af3658b2ec2"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classLedControl.htm">LedControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ac97a3815e42cfdec5b838af3658b2ec2">getLedControlKeypadAndDisplay</a> ()</td></tr>
<tr class="separator:ac97a3815e42cfdec5b838af3658b2ec2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58a0850f8fa5a17e1288527458e4b68f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a58a0850f8fa5a17e1288527458e4b68f">OrientationSensorOn</a> (bool enable)</td></tr>
<tr class="separator:a58a0850f8fa5a17e1288527458e4b68f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa797feaf368a0613258678274c452f03"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#aa797feaf368a0613258678274c452f03">setBluetoothKeyboardActive</a> (bool active)</td></tr>
<tr class="separator:aa797feaf368a0613258678274c452f03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02d4ff9b0c7877221e29f73dac60d444"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a02d4ff9b0c7877221e29f73dac60d444">bluetoothKeyboardActive</a> () const </td></tr>
<tr class="separator:a02d4ff9b0c7877221e29f73dac60d444"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classHostBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classHostBase')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classHostBase.htm">HostBase</a></td></tr>
<tr class="memitem:abc1bcd5c42d2eb5451a8170379cae304 inherit pub_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#abc1bcd5c42d2eb5451a8170379cae304">~HostBase</a> ()</td></tr>
<tr class="separator:abc1bcd5c42d2eb5451a8170379cae304 inherit pub_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ced00bfde3ed358720ac3c5f31d5048 inherit pub_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structHostInfo.htm">HostInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a8ced00bfde3ed358720ac3c5f31d5048">getInfo</a> () const </td></tr>
<tr class="separator:a8ced00bfde3ed358720ac3c5f31d5048 inherit pub_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12aff8262b4bf30d3cb6e0af32909011 inherit pub_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a12aff8262b4bf30d3cb6e0af32909011">run</a> ()</td></tr>
<tr class="separator:a12aff8262b4bf30d3cb6e0af32909011 inherit pub_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c70ea03b8347e1bf1ca3df833324379 inherit pub_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a6c70ea03b8347e1bf1ca3df833324379">quit</a> ()</td></tr>
<tr class="separator:a6c70ea03b8347e1bf1ca3df833324379 inherit pub_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d837481808ec34d2a832d5af182c897 inherit pub_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">virtual unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a1d837481808ec34d2a832d5af182c897">translateKeyWithMeta</a> (unsigned short key, bool withShift, bool withAlt)</td></tr>
<tr class="separator:a1d837481808ec34d2a832d5af182c897 inherit pub_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7aac96a702507f19f24f0a9e3195700 inherit pub_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#ac7aac96a702507f19f24f0a9e3195700">lockPainting</a> ()</td></tr>
<tr class="separator:ac7aac96a702507f19f24f0a9e3195700 inherit pub_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64e347099fa6beeaeafd1c180a124d44 inherit pub_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a64e347099fa6beeaeafd1c180a124d44">unlockPainting</a> ()</td></tr>
<tr class="separator:a64e347099fa6beeaeafd1c180a124d44 inherit pub_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3899b37381505a5e346d15235b11d31c inherit pub_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a3899b37381505a5e346d15235b11d31c">setMetaModifier</a> (bool metaKeyDown)</td></tr>
<tr class="separator:a3899b37381505a5e346d15235b11d31c inherit pub_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95919e14b25a77f1d70b688855fbeb48 inherit pub_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a95919e14b25a77f1d70b688855fbeb48">metaModifier</a> ()</td></tr>
<tr class="separator:a95919e14b25a77f1d70b688855fbeb48 inherit pub_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae46ba603ab5ae5b38a66bb95f06708a2 inherit pub_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#ae46ba603ab5ae5b38a66bb95f06708a2">turboModeSubscription</a> (bool add)</td></tr>
<tr class="separator:ae46ba603ab5ae5b38a66bb95f06708a2 inherit pub_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafe87f833c0d66f493894845a11eb36a inherit pub_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#aafe87f833c0d66f493894845a11eb36a">hasAltKey</a> (Qt::KeyboardModifiers modifiers)</td></tr>
<tr class="separator:aafe87f833c0d66f493894845a11eb36a inherit pub_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32006e1c0cea07b0b2b93075a71b1eb8 inherit pub_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a32006e1c0cea07b0b2b93075a71b1eb8">setOrientation</a> (<a class="el" href="classOrientationEvent.htm#a971894297d09205ac67571c3957f560a">OrientationEvent::Orientation</a> o)</td></tr>
<tr class="separator:a32006e1c0cea07b0b2b93075a71b1eb8 inherit pub_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20cf499b6e9597d72c33c9ad731f3732 inherit pub_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">QPoint&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a20cf499b6e9597d72c33c9ad731f3732">map</a> (const QPoint &amp;pt)</td></tr>
<tr class="separator:a20cf499b6e9597d72c33c9ad731f3732 inherit pub_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae80e32785170b3f3e4268fc22b727b86 inherit pub_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classOrientationEvent.htm">OrientationEvent</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#ae80e32785170b3f3e4268fc22b727b86">postProcessDeviceOrientation</a> (<a class="el" href="classOrientationEvent.htm">OrientationEvent</a> *currOrientation)</td></tr>
<tr class="separator:ae80e32785170b3f3e4268fc22b727b86 inherit pub_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad38805fb652479658b5831ef2a85926 inherit pub_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#aad38805fb652479658b5831ef2a85926">homeButtonWakesUpScreen</a> ()</td></tr>
<tr class="separator:aad38805fb652479658b5831ef2a85926 inherit pub_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classTaskBase"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classTaskBase')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classTaskBase.htm">TaskBase</a></td></tr>
<tr class="memitem:ad1abe361d54207f1bb4e0e2f87e8251c inherit pub_methods_classTaskBase"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classTaskBase.htm#ad1abe361d54207f1bb4e0e2f87e8251c">TaskBase</a> ()</td></tr>
<tr class="separator:ad1abe361d54207f1bb4e0e2f87e8251c inherit pub_methods_classTaskBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a1aa8cdd317717be35592265762faa1 inherit pub_methods_classTaskBase"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classTaskBase.htm#a7a1aa8cdd317717be35592265762faa1">~TaskBase</a> ()</td></tr>
<tr class="separator:a7a1aa8cdd317717be35592265762faa1 inherit pub_methods_classTaskBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87d3ceb4097dfd5969ebf4405b3dd118 inherit pub_methods_classTaskBase"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classTaskBase.htm#a87d3ceb4097dfd5969ebf4405b3dd118">postEvent</a> (<a class="el" href="classsptr.htm">sptr</a>&lt; <a class="el" href="classEvent.htm">Event</a> &gt; event, bool highPriority=false)</td></tr>
<tr class="separator:a87d3ceb4097dfd5969ebf4405b3dd118 inherit pub_methods_classTaskBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96aff6fff43b856e985a6b6ced6d5af9 inherit pub_methods_classTaskBase"><td class="memItemLeft" align="right" valign="top">GMainLoop *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classTaskBase.htm#a96aff6fff43b856e985a6b6ced6d5af9">mainLoop</a> () const </td></tr>
<tr class="separator:a96aff6fff43b856e985a6b6ced6d5af9 inherit pub_methods_classTaskBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d02fef1170fa299c2be8c7a89d992ee inherit pub_methods_classTaskBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classSingletonTimer.htm">SingletonTimer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classTaskBase.htm#a6d02fef1170fa299c2be8c7a89d992ee">masterTimer</a> () const </td></tr>
<tr class="separator:a6d02fef1170fa299c2be8c7a89d992ee inherit pub_methods_classTaskBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classRefCounted"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classRefCounted')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classRefCounted.htm">RefCounted</a></td></tr>
<tr class="memitem:a0f4d8212944ba431ea79c4fc55f093f8 inherit pub_methods_classRefCounted"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRefCounted.htm#a0f4d8212944ba431ea79c4fc55f093f8">RefCounted</a> ()</td></tr>
<tr class="separator:a0f4d8212944ba431ea79c4fc55f093f8 inherit pub_methods_classRefCounted"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e65f84e3e6cc1c2c633b97a19d49246 inherit pub_methods_classRefCounted"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRefCounted.htm#a5e65f84e3e6cc1c2c633b97a19d49246">~RefCounted</a> ()</td></tr>
<tr class="separator:a5e65f84e3e6cc1c2c633b97a19d49246 inherit pub_methods_classRefCounted"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1932b96104186ea7423d53648e2272b1 inherit pub_methods_classRefCounted"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRefCounted.htm#a1932b96104186ea7423d53648e2272b1">ref</a> ()</td></tr>
<tr class="separator:a1932b96104186ea7423d53648e2272b1 inherit pub_methods_classRefCounted"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdf76a72ff2ba5f755c4d954c0680480 inherit pub_methods_classRefCounted"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classRefCounted.htm#afdf76a72ff2ba5f755c4d954c0680480">deref</a> ()</td></tr>
<tr class="separator:afdf76a72ff2ba5f755c4d954c0680480 inherit pub_methods_classRefCounted"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-slots"></a>
Protected Slots</h2></td></tr>
<tr class="memitem:a69c98eeeecc3bb11f3351185860da2b5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a69c98eeeecc3bb11f3351185860da2b5">readALSData</a> ()</td></tr>
<tr class="separator:a69c98eeeecc3bb11f3351185860da2b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adabcbe6c58b49c2b29f83307740fa8c2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#adabcbe6c58b49c2b29f83307740fa8c2">readProxData</a> ()</td></tr>
<tr class="separator:adabcbe6c58b49c2b29f83307740fa8c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a20600a23ab56027f41d04ad5215c75b5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a20600a23ab56027f41d04ad5215c75b5">wakeUpLcd</a> ()</td></tr>
<tr class="separator:a20600a23ab56027f41d04ad5215c75b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63c4357194c9e7ddeb3c74be7d479f1f"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a63c4357194c9e7ddeb3c74be7d479f1f">screenX</a> (int rawX, Event::Type type)</td></tr>
<tr class="separator:a63c4357194c9e7ddeb3c74be7d479f1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94c2c05c406b76e3b0921a759c6fcb1b"><td class="memItemLeft" align="right" valign="top">virtual int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a94c2c05c406b76e3b0921a759c6fcb1b">screenY</a> (int rawY, Event::Type type)</td></tr>
<tr class="separator:a94c2c05c406b76e3b0921a759c6fcb1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d819c415ef5113bb13cb809736f16af"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a7d819c415ef5113bb13cb809736f16af">setCentralWidget</a> (<a class="el" href="classQWidget.htm">QWidget</a> *view)</td></tr>
<tr class="separator:a7d819c415ef5113bb13cb809736f16af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b459fdc063dee6483d9289f154a751a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a3b459fdc063dee6483d9289f154a751a">setupInput</a> (void)</td></tr>
<tr class="separator:a3b459fdc063dee6483d9289f154a751a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab65be1f72b88c7b49a57656cd10f7aeb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ab65be1f72b88c7b49a57656cd10f7aeb">shutdownInput</a> (void)</td></tr>
<tr class="separator:ab65be1f72b88c7b49a57656cd10f7aeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8959d626843be01ef12baeb9fcd8541d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a8959d626843be01ef12baeb9fcd8541d">startService</a> (void)</td></tr>
<tr class="separator:a8959d626843be01ef12baeb9fcd8541d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab997f5a0a3730a053cc3b9149fcad31b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ab997f5a0a3730a053cc3b9149fcad31b">stopService</a> (void)</td></tr>
<tr class="separator:ab997f5a0a3730a053cc3b9149fcad31b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dafde3a31849b7c3709c28ea0a1985c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a6dafde3a31849b7c3709c28ea0a1985c">disableScreenBlanking</a> ()</td></tr>
<tr class="separator:a6dafde3a31849b7c3709c28ea0a1985c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d67569de3da0b9b5d38de51ad96819d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a4d67569de3da0b9b5d38de51ad96819d">flip</a> ()</td></tr>
<tr class="separator:a4d67569de3da0b9b5d38de51ad96819d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdb52922ba3ec6d1885c47dc00693e56"><td class="memItemLeft" align="right" valign="top">virtual QImage&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#acdb52922ba3ec6d1885c47dc00693e56">takeScreenShot</a> () const </td></tr>
<tr class="separator:acdb52922ba3ec6d1885c47dc00693e56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a574fc9862e334e9cced003a502330ec5"><td class="memItemLeft" align="right" valign="top">virtual QImage&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a574fc9862e334e9cced003a502330ec5">takeAppDirectRenderingScreenShot</a> () const </td></tr>
<tr class="separator:a574fc9862e334e9cced003a502330ec5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed6d8442ac3da98984a4ca00ad630b30"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#aed6d8442ac3da98984a4ca00ad630b30">setAppDirectRenderingLayerEnabled</a> (bool enable)</td></tr>
<tr class="separator:aed6d8442ac3da98984a4ca00ad630b30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac330087c411b5fbfcbce685b8e1ef73d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ac330087c411b5fbfcbce685b8e1ef73d">setRenderingLayerEnabled</a> (bool enable)</td></tr>
<tr class="separator:ac330087c411b5fbfcbce685b8e1ef73d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff58a071caee991386dfe98421648002"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#aff58a071caee991386dfe98421648002">NYXDataAvailable</a> (<a class="el" href="classNYXConnectorBase.htm#a4abdf44729c7ac3a29ba95f154e8ac9e">NYXConnectorBase::Sensor</a> aSensorType)</td></tr>
<tr class="separator:aff58a071caee991386dfe98421648002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classHostBase"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classHostBase')"><img src="closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="classHostBase.htm">HostBase</a></td></tr>
<tr class="memitem:a39006d2b759b1b297647e283ef8dfe6f inherit pro_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a39006d2b759b1b297647e283ef8dfe6f">HostBase</a> ()</td></tr>
<tr class="separator:a39006d2b759b1b297647e283ef8dfe6f inherit pro_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a306567c56c8b87c98d440e151a6c1275 inherit pro_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a306567c56c8b87c98d440e151a6c1275">handleEvent</a> (<a class="el" href="classsptr.htm">sptr</a>&lt; <a class="el" href="classEvent.htm">Event</a> &gt;)</td></tr>
<tr class="separator:a306567c56c8b87c98d440e151a6c1275 inherit pro_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83e9d336db1554aed7e787bd0d0cada2 inherit pro_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a83e9d336db1554aed7e787bd0d0cada2">turboMode</a> (bool enable)</td></tr>
<tr class="separator:a83e9d336db1554aed7e787bd0d0cada2 inherit pro_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-static-methods"></a>
Static Protected Member Functions</h2></td></tr>
<tr class="memitem:ad0dace7ff1ce6094cf1950a3c30fd679"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ad0dace7ff1ce6094cf1950a3c30fd679">getMsgValueInt</a> (LSMessage *msg, int &amp;value)</td></tr>
<tr class="separator:ad0dace7ff1ce6094cf1950a3c30fd679"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a179a52ab29072b2345215fd09e5c0217"><td class="memItemLeft" align="right" valign="top">QSocketNotifier *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a179a52ab29072b2345215fd09e5c0217">m_nyxLightNotifier</a></td></tr>
<tr class="separator:a179a52ab29072b2345215fd09e5c0217"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeecbc226fd4cc2ad138090f14ed7177e"><td class="memItemLeft" align="right" valign="top">QSocketNotifier *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#aeecbc226fd4cc2ad138090f14ed7177e">m_nyxProxNotifier</a></td></tr>
<tr class="separator:aeecbc226fd4cc2ad138090f14ed7177e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebf5c17cfee39295c0d3ed42a65b94c7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#aebf5c17cfee39295c0d3ed42a65b94c7">m_fb0Fd</a></td></tr>
<tr class="separator:aebf5c17cfee39295c0d3ed42a65b94c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af45ad66eb3c1f5de79e5155cd9720ed0"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#af45ad66eb3c1f5de79e5155cd9720ed0">m_fb1Fd</a></td></tr>
<tr class="separator:af45ad66eb3c1f5de79e5155cd9720ed0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa74cff160f96b95de6fead7edf2ae90"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#afa74cff160f96b95de6fead7edf2ae90">m_fb0Buffer</a></td></tr>
<tr class="separator:afa74cff160f96b95de6fead7edf2ae90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a076e7d012b243fbb4ba8e5cf40d1b7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a7a076e7d012b243fbb4ba8e5cf40d1b7">m_fb0NumBuffers</a></td></tr>
<tr class="separator:a7a076e7d012b243fbb4ba8e5cf40d1b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac84c466cb884fad04984d3cd1fbec07"><td class="memItemLeft" align="right" valign="top">void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#aac84c466cb884fad04984d3cd1fbec07">m_fb1Buffer</a></td></tr>
<tr class="separator:aac84c466cb884fad04984d3cd1fbec07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad247f0982277462974527e276db9031f"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ad247f0982277462974527e276db9031f">m_fb1NumBuffers</a></td></tr>
<tr class="separator:ad247f0982277462974527e276db9031f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24b12b5300a69e884340c4a687e304fb"><td class="memItemLeft" align="right" valign="top">LSHandle *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a24b12b5300a69e884340c4a687e304fb">m_service</a></td></tr>
<tr class="separator:a24b12b5300a69e884340c4a687e304fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a342b3bd0c736c90d370f52330aea7072"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a342b3bd0c736c90d370f52330aea7072">m_nyxInputControlALS</a></td></tr>
<tr class="separator:a342b3bd0c736c90d370f52330aea7072"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a813ff4de2735b0618b9da428e7f6c2dc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a813ff4de2735b0618b9da428e7f6c2dc">m_nyxInputControlBluetoothInputDetect</a></td></tr>
<tr class="separator:a813ff4de2735b0618b9da428e7f6c2dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b0d45cb71bf1cf96e24262cb9ad6391"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a5b0d45cb71bf1cf96e24262cb9ad6391">m_nyxInputControlProx</a></td></tr>
<tr class="separator:a5b0d45cb71bf1cf96e24262cb9ad6391"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0e31f8f111bc533203c8d799581e2be"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#af0e31f8f111bc533203c8d799581e2be">m_nyxInputControlKeys</a></td></tr>
<tr class="separator:af0e31f8f111bc533203c8d799581e2be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add36d93acf2f003abfb4a3d4fc8670c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classInputControl.htm">InputControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#add36d93acf2f003abfb4a3d4fc8670c3">m_nyxInputControlTouchpanel</a></td></tr>
<tr class="separator:add36d93acf2f003abfb4a3d4fc8670c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0b1f2eca8ce6b8079a8a31ffc1f5955"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classLedControl.htm">LedControl</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#ac0b1f2eca8ce6b8079a8a31ffc1f5955">m_nyxLedControlKeypadAndDisplay</a></td></tr>
<tr class="separator:ac0b1f2eca8ce6b8079a8a31ffc1f5955"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a387467fdc5e20baceecc37cefe9c3793"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a387467fdc5e20baceecc37cefe9c3793">m_bluetoothKeyboardActive</a></td></tr>
<tr class="separator:a387467fdc5e20baceecc37cefe9c3793"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e0dabdfe8c05afa4a552cee42830b18"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classNYXOrientationSensorConnector.htm">NYXOrientationSensorConnector</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostArm.htm#a8e0dabdfe8c05afa4a552cee42830b18">m_OrientationSensor</a></td></tr>
<tr class="separator:a8e0dabdfe8c05afa4a552cee42830b18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classHostBase"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classHostBase')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classHostBase.htm">HostBase</a></td></tr>
<tr class="memitem:ab13670cd01fe840cffa477b36234cdd3 inherit pro_attribs_classHostBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structHostInfo.htm">HostInfo</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#ab13670cd01fe840cffa477b36234cdd3">m_info</a></td></tr>
<tr class="separator:ab13670cd01fe840cffa477b36234cdd3 inherit pro_attribs_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5faac341cd6686188e124e9300d493a5 inherit pro_attribs_classHostBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMutex.htm">Mutex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a5faac341cd6686188e124e9300d493a5">m_paintMutex</a></td></tr>
<tr class="separator:a5faac341cd6686188e124e9300d493a5 inherit pro_attribs_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b7d33ca0cd0606f5bc5676ce024a3d5 inherit pro_attribs_classHostBase"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a6b7d33ca0cd0606f5bc5676ce024a3d5">m_metaKeyDown</a></td></tr>
<tr class="separator:a6b7d33ca0cd0606f5bc5676ce024a3d5 inherit pro_attribs_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb9d5c1dbab87500dc8635b0736b2726 inherit pro_attribs_classHostBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classOrientationEvent.htm#a971894297d09205ac67571c3957f560a">OrientationEvent::Orientation</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#adb9d5c1dbab87500dc8635b0736b2726">m_orientation</a></td></tr>
<tr class="separator:adb9d5c1dbab87500dc8635b0736b2726 inherit pro_attribs_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a062a39ed237dc2304c458a817328ad5c inherit pro_attribs_classHostBase"><td class="memItemLeft" align="right" valign="top">QTransform&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a062a39ed237dc2304c458a817328ad5c">m_trans</a></td></tr>
<tr class="separator:a062a39ed237dc2304c458a817328ad5c inherit pro_attribs_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22536f7dce86ddf9d5320beb18edf6fc inherit pro_attribs_classHostBase"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a22536f7dce86ddf9d5320beb18edf6fc">m_numBuffers</a></td></tr>
<tr class="separator:a22536f7dce86ddf9d5320beb18edf6fc inherit pro_attribs_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae213d89f606c81074305f0a40ee4da38 inherit pro_attribs_classHostBase"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#ae213d89f606c81074305f0a40ee4da38">m_turboModeSubscriptions</a></td></tr>
<tr class="separator:ae213d89f606c81074305f0a40ee4da38 inherit pro_attribs_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classTaskBase"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classTaskBase')"><img src="closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="classTaskBase.htm">TaskBase</a></td></tr>
<tr class="memitem:a55151f8de8aec43e48186633453ed86d inherit pro_attribs_classTaskBase"><td class="memItemLeft" align="right" valign="top">GMainContext *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classTaskBase.htm#a55151f8de8aec43e48186633453ed86d">m_mainCtxt</a></td></tr>
<tr class="separator:a55151f8de8aec43e48186633453ed86d inherit pro_attribs_classTaskBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34b5b86cb2d9c794ba9e3c0708840549 inherit pro_attribs_classTaskBase"><td class="memItemLeft" align="right" valign="top">GMainLoop *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classTaskBase.htm#a34b5b86cb2d9c794ba9e3c0708840549">m_mainLoop</a></td></tr>
<tr class="separator:a34b5b86cb2d9c794ba9e3c0708840549 inherit pro_attribs_classTaskBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4b112c73aece7683b4e23316e672a7e inherit pro_attribs_classTaskBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMutex.htm">Mutex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classTaskBase.htm#ae4b112c73aece7683b4e23316e672a7e">m_mutex</a></td></tr>
<tr class="separator:ae4b112c73aece7683b4e23316e672a7e inherit pro_attribs_classTaskBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2559a82f77d3dfb1171234db3ed6f205 inherit pro_attribs_classTaskBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classMutex.htm">Mutex</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classTaskBase.htm#a2559a82f77d3dfb1171234db3ed6f205">m_eventsMutex</a></td></tr>
<tr class="separator:a2559a82f77d3dfb1171234db3ed6f205 inherit pro_attribs_classTaskBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77871e74bfdb9d86e609aa7d0f2fa1ab inherit pro_attribs_classTaskBase"><td class="memItemLeft" align="right" valign="top">std::list&lt; <a class="el" href="classsptr.htm">sptr</a>&lt; <a class="el" href="classEvent.htm">Event</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classTaskBase.htm#a77871e74bfdb9d86e609aa7d0f2fa1ab">m_eventsList</a></td></tr>
<tr class="separator:a77871e74bfdb9d86e609aa7d0f2fa1ab inherit pro_attribs_classTaskBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29a486e0ac57b8b9dfbf2ff5b1fffc27 inherit pro_attribs_classTaskBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classAsyncCaller.htm">AsyncCaller</a>&lt; <a class="el" href="classTaskBase.htm">TaskBase</a> &gt; *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classTaskBase.htm#a29a486e0ac57b8b9dfbf2ff5b1fffc27">m_asyncCaller</a></td></tr>
<tr class="separator:a29a486e0ac57b8b9dfbf2ff5b1fffc27 inherit pro_attribs_classTaskBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53a66ed61d8441dd37f31a85e83720c2 inherit pro_attribs_classTaskBase"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classSingletonTimer.htm">SingletonTimer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classTaskBase.htm#a53a66ed61d8441dd37f31a85e83720c2">m_masterTimer</a></td></tr>
<tr class="separator:a53a66ed61d8441dd37f31a85e83720c2 inherit pro_attribs_classTaskBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header signals_classHostBase"><td colspan="2" onclick="javascript:toggleInherit('signals_classHostBase')"><img src="closed.png" alt="-"/>&#160;Signals inherited from <a class="el" href="classHostBase.htm">HostBase</a></td></tr>
<tr class="memitem:a0909a8a75b8df50b2115d06a5ab559d9 inherit signals_classHostBase"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#a0909a8a75b8df50b2115d06a5ab559d9">signalBluetoothKeyboardActive</a> (bool active)</td></tr>
<tr class="separator:a0909a8a75b8df50b2115d06a5ab559d9 inherit signals_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classHostBase"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classHostBase')"><img src="closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="classHostBase.htm">HostBase</a></td></tr>
<tr class="memitem:ac0615bded33adf0ad86fda0f27b040c2 inherit pub_static_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classHostBase.htm">HostBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#ac0615bded33adf0ad86fda0f27b040c2">instance</a> ()</td></tr>
<tr class="separator:ac0615bded33adf0ad86fda0f27b040c2 inherit pub_static_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6ef80b32e862db109167ef6d436e170 inherit pub_static_methods_classHostBase"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classHostBase.htm#ac6ef80b32e862db109167ef6d436e170">hostIsQemu</a> ()</td></tr>
<tr class="separator:ac6ef80b32e862db109167ef6d436e170 inherit pub_static_methods_classHostBase"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Base class for all ARM-based host device classes to derive from </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ab784efc88b45b4fe1e4442a1a6014304"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">HostArm::HostArm </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Constructs an ARM-based host device</p>
<p>Initializes common ARM hardware. </p>

</div>
</div>
<a class="anchor" id="acd63610f5841ce45a06c2931ded82b77"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">HostArm::~HostArm </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Shuts down ARM-specific hardware </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a02d4ff9b0c7877221e29f73dac60d444"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HostArm::bluetoothKeyboardActive </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Checks whether Bluetooth keyboard functionality is enabled</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000018">Todo:</a></b></dt><dd>Verify that the documentation for this method is correct.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>true if Bluetooth keyboard functionality is enabled, otherwise false. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#af7a97a39aca19814ec7b038bd8f93bc1">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a6dafde3a31849b7c3709c28ea0a1985c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::disableScreenBlanking </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Disable screen blanking and puts the screen into graphics mode</p>
<p>Enabled screen blanking to restore the screen from sleep, then immediately disables it.</p>
<p>After that, it puts the screen into grahics mode to get it ready to draw to (and hide the text terminal cursor).</p>
<p>When deciphering the implementation of this, see the manpage for console_ioctl, specifically TIOCLINUX subcodes 0 and 10. </p>

</div>
</div>
<a class="anchor" id="a4d67569de3da0b9b5d38de51ad96819d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::flip </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Flips the back buffer to the display</p>
<p>Displays to the screen what is currently contained in the back buffer. Since there is a back buffer, drawing can be completed on the back buffer at the program's leisure before displaying it in one swift move with a flip. </p>

<p>Reimplemented from <a class="el" href="classHostBase.htm#abd2faa65456a6ee015d885edbf862818">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a5e0fbcbf0780b2f06f1210c9f131d3d8"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a> * HostArm::getInputControlALS </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Gets an <a class="el" href="classInputControl.htm">InputControl</a> pointer for the ambient light sensor</p>
<p>Allows the ambient light sensor to be turned on/off.</p>
<dl class="section return"><dt>Returns</dt><dd>Ambient light sensor control. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a14c5ed55ae8c96d12902f27264b382b1">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a2d3055444437d6d317c5181ba82022e7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a> * HostArm::getInputControlBluetoothInputDetect </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Gets an <a class="el" href="classInputControl.htm">InputControl</a> pointer for Bluetooth input detection</p>
<p>Allows the Bluetooth input detection to be turned on/off.</p>
<dl class="section return"><dt>Returns</dt><dd>Bluetooth input sensor control. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#aab2febe25815882de090c92f7c93076b">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a358b89ea56aea621256391bda37d0b93"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a> * HostArm::getInputControlKeys </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Gets an <a class="el" href="classInputControl.htm">InputControl</a> pointer for the keyboard</p>
<p>Allows the keyboard to be turned on/off.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000014">Todo:</a></b></dt><dd>Confirm documentation on this.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Control keys sensor control. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a462397bd3df761447abbf58d972081a9">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a5e85c0d6aa734edc8d7492b0cde1c2d0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a> * HostArm::getInputControlProximity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Gets an <a class="el" href="classInputControl.htm">InputControl</a> pointer for the face proximity sensor</p>
<p>Allows the face proximity sensor to be turned on/off.</p>
<dl class="section return"><dt>Returns</dt><dd>Face proximity sensor control. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a1be60ebd18bf74010a6e48441feba8a8">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="aeec700787178cd33745ad94584007343"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a> * HostArm::getInputControlTouchpanel </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Gets an <a class="el" href="classInputControl.htm">InputControl</a> pointer for the touch panel</p>
<p>Allows the touch panel to be turned on/off.</p>
<dl class="section return"><dt>Returns</dt><dd>Touch panel sensor control. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a50b0466b4bd8a8948532f085b229da96">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="ac97a3815e42cfdec5b838af3658b2ec2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classLedControl.htm">LedControl</a> * HostArm::getLedControlKeypadAndDisplay </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Gets an <a class="el" href="classLedControl.htm">LedControl</a> pointer for the keyboard backlight</p>
<p>Allows the keyboard backlight to be turned on/off.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000015">Todo:</a></b></dt><dd>Confirm documentation on this.</dd></dl>
<dl class="section return"><dt>Returns</dt><dd>Keyboard backlight control. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a4e1396c230ce0aadec60a742259c1d36">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="ad0dace7ff1ce6094cf1950a3c30fd679"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HostArm::getMsgValueInt </td>
          <td>(</td>
          <td class="paramtype">LSMessage *&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int &amp;&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Given a return value from an IPC call with a "value" element, returns the integer value of it</p>
<p>When an IPC call passes back a JSON structure in a format such as:</p>
<p><code> { value : "127" } </code></p>
<p>It returns the integer value of the "value" element.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>Return value message to parse from IPC call. </td></tr>
    <tr><td class="paramname">value</td><td>Where to store the integer version of the value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if parsing was successful, false if parsing failed. </dd></dl>

</div>
</div>
<a class="anchor" id="a5984e1ef2b8f4a3ecd63bc8937bf1572"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int HostArm::getNumberOfSwitches </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Gets the number of hardware switches the current host device has</p>
<p>As an example, the Palm Pre has 3 switches:</p>
<ul>
<li>Ringer on/off.</li>
<li>Slider opened/closed.</li>
<li>Headphones inserted/no headphones.</li>
</ul>
<dl class="section return"><dt>Returns</dt><dd>Number of hardware switches the device has. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a0d1c61d48230e0fcb4705ccddb886d3d">HostBase</a>.</p>

<p>Reimplemented in <a class="el" href="classHostArmQemu.htm#a4147da831fa24dbc0cf2730c367db60e">HostArmQemu</a>, <a class="el" href="classHostArmBroadway.htm#adbb41aeb1e25edd433a95690be58fe0b">HostArmBroadway</a>, <a class="el" href="classHostArmTopaz.htm#a37cb9374644f448afaf3084535fefc31">HostArmTopaz</a>, <a class="el" href="classHostArmOpal.htm#af8ae8e8c88973ff67f95961e27efc73b">HostArmOpal</a>, and <a class="el" href="classHostArmWindsorNot.htm#acf1183f42b5ecf61d057ec615ebebf2b">HostArmWindsorNot</a>.</p>

</div>
</div>
<a class="anchor" id="ab9b1444ba6e156f9dca62ab38ee024e2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char * HostArm::hardwareName </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="classHostBase.htm#a5835840c718876c380bfa12e1e85e329">HostBase</a>.</p>

<p>Reimplemented in <a class="el" href="classHostArmQemu.htm#aa983f9982d0d8cf9a40be9bc90d246e9">HostArmQemu</a>, <a class="el" href="classHostArmBroadway.htm#ab2544381e3c840e806e3932ef9cb6eac">HostArmBroadway</a>, <a class="el" href="classHostArmMantaray.htm#a2312077da3740485e6467ce6b2114891">HostArmMantaray</a>, <a class="el" href="classHostArmTopaz.htm#a265772fbd96bef0dade5075e01ff4ec6">HostArmTopaz</a>, <a class="el" href="classHostArmOpal.htm#a2f73a7ee911f17cadf291f57d5f20a75">HostArmOpal</a>, <a class="el" href="classHostArmWindsorNot.htm#aa4282a565fc51472cd11f15c7600e884">HostArmWindsorNot</a>, and <a class="el" href="classHostArmUnknown.htm#aa1b4dff301656bdf4c0ef334b861c0c4">HostArmUnknown</a>.</p>

</div>
</div>
<a class="anchor" id="afdb1270ae2387bc9240f2c70544025ef"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::init </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>w</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>h</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Initialize device-specific hardware</p>
<p>Initializes hardware, fetches display info, and generally prepares the host device for LunaSysMgr to run on it.</p>
<p>Must be overridden for each type of device Host class needed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">w</td><td>Hint as to what the screen width probably is. Ignored by most devices since they can query the screen for its capabilities. </td></tr>
    <tr><td class="paramname">h</td><td>Hint as to what the screen height probably is. Ignored by most devices since they can query the screen for its capabilities. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classHostBase.htm#a0ada2c44250d792df0a01b69b4b2e0e1">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="aff58a071caee991386dfe98421648002"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::NYXDataAvailable </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classNYXConnectorBase.htm#a4abdf44729c7ac3a29ba95f154e8ac9e">NYXConnectorBase::Sensor</a>&#160;</td>
          <td class="paramname"><em>aSensorType</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Function gets called whenever there is some data available from NYX.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[in]</td><td class="paramname">-</td><td>aSensorType - Sensor which has got some data to report </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="classNYXConnectorObserver.htm#a992c6659cc3e37228bde3defe85cb757">NYXConnectorObserver</a>.</p>

</div>
</div>
<a class="anchor" id="a58a0850f8fa5a17e1288527458e4b68f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::OrientationSensorOn </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Function enables/disables the orientation sensor</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">enable</td><td>true to enable the orientation sensor, false to disable it. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a242c246df15f73a588a5027cf46cb580">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a69c98eeeecc3bb11f3351185860da2b5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::readALSData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Read the value of the ambient light sensor</p>
<p>Reads the value of the ambient light sensor and posts an <a class="el" href="classAlsEvent.htm">AlsEvent</a> event to the active window's event queue with the value IF it is able to successfully retrieve the value.</p>
<dl class="section note"><dt>Note</dt><dd>You MUST run <a class="el" href="classHostArm.htm#a3b459fdc063dee6483d9289f154a751a">HostArm::setupInput()</a> (or <a class="el" href="classHostArm.htm#a5e0fbcbf0780b2f06f1210c9f131d3d8">HostArm::getInputControlALS()</a> directly if you feel adventurous) before calling this method for it to actually do anything.</dd></dl>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classHostArm.htm#a5e0fbcbf0780b2f06f1210c9f131d3d8">HostArm::getInputControlALS()</a> </dd>
<dd>
<a class="el" href="classAlsEvent.htm">AlsEvent</a></dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000010">Todo:</a></b></dt><dd>Document the value range for the ambient light sensor. </dd></dl>

</div>
</div>
<a class="anchor" id="a12cb409a58eddef07c289b6cd9b7618d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int HostArm::readHidEvents </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>fd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct input_event *&#160;</td>
          <td class="paramname"><em>eventBuf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>bufSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Reads input_event structures from a file descriptor and returns the number read</p>
<p>Mainly just a utility method for use within this class. Very purpose- specific.</p>
<dl class="section see"><dt>See Also</dt><dd>input_event</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fd</td><td>File descriptor to read from. </td></tr>
    <tr><td class="paramname">eventBuf</td><td>Buffer to read input_events into. </td></tr>
    <tr><td class="paramname">bufSize</td><td>Amount of allocated memory (in bytes) that eventBuf points to. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns the number of events read on success (may be 0) or -1 on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="adabcbe6c58b49c2b29f83307740fa8c2"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::readProxData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">slot</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Read the value of the face proximity sensor</p>
<p>Reads the value of the face proximity sensor and posts an <a class="el" href="classProximityEvent.htm">ProximityEvent</a> event to the active window's event queue with the value IF it is able to successfully retrieve the value.</p>
<dl class="section note"><dt>Note</dt><dd>You MUST run <a class="el" href="classHostArm.htm#a3b459fdc063dee6483d9289f154a751a">HostArm::setupInput()</a> (or <a class="el" href="classHostArm.htm#a5e85c0d6aa734edc8d7492b0cde1c2d0">HostArm::getInputControlProximity()</a> directly if you feel adventurous) before calling this method for it to actually do anything.</dd></dl>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classHostArm.htm#a5e85c0d6aa734edc8d7492b0cde1c2d0">HostArm::getInputControlProximity()</a> </dd>
<dd>
<a class="el" href="classProximityEvent.htm">ProximityEvent</a></dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000011">Todo:</a></b></dt><dd>Document the value range for the face proximity sensor. </dd></dl>

</div>
</div>
<a class="anchor" id="a63c4357194c9e7ddeb3c74be7d479f1f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int HostArm::screenX </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>rawX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Event::Type&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Remap a raw X value from the touchscreen to a pixel value</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000001">Todo:</a></b></dt><dd>Confirm this, since there's only one implementation of this at the moment.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rawX</td><td>Raw X value from the touchscreen. </td></tr>
    <tr><td class="paramname">type</td><td>Type of event which gave us this coordinate value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Screen X of the touch, in pixels. </dd></dl>

</div>
</div>
<a class="anchor" id="a94c2c05c406b76e3b0921a759c6fcb1b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int HostArm::screenY </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>rawY</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Event::Type&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Remap a raw Y value from the touchscreen to a pixel value</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000002">Todo:</a></b></dt><dd>Confirm this, since there's only one implementation of this at the moment.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rawY</td><td>Raw Y value from the touchscreen. </td></tr>
    <tr><td class="paramname">type</td><td>Type of event which gave us this coordinate value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Screen Y of the touch, in pixels. </dd></dl>

</div>
</div>
<a class="anchor" id="aed6d8442ac3da98984a4ca00ad630b30"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::setAppDirectRenderingLayerEnabled </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Unknown purpose at this time</p>
<p>This is used in very few other places, so I don't know exactly what it's used for. On ARM devices, executes an FBIO command that I cannot currently find documentation for. Seems to have something to do with blanking.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000013">Todo:</a></b></dt><dd>Document what this is used for and how it works once it's figured out.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">enable</td><td>Unknown. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a8e75d775b407727518e9d202747e4ce6">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="aa797feaf368a0613258678274c452f03"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::setBluetoothKeyboardActive </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>active</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Enable/disable Bluetooth keyboards</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000017">Todo:</a></b></dt><dd>Verify that the documentation for this method is correct.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">active</td><td>true to enable Bluetooth keyboards, false to disable </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a90abfa30f83b6f66ac435a3baa4dcce4">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a7d819c415ef5113bb13cb809736f16af"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::setCentralWidget </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classQWidget.htm">QWidget</a> *&#160;</td>
          <td class="paramname"><em>view</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Sets the Qt widget that the display should reside in</p>
<p>Mostly unused except under the QtDesktop and Qemu hosts, where it is used to attach a keyboard remapping filter.</p>
<p>Called by <a class="el" href="">WindowServer::WindowServer()</a>.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">view</td><td>Qt widget to display within. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a34c4fd34fe3322859382f3bc11443758">HostBase</a>.</p>

<p>Reimplemented in <a class="el" href="classHostArmQemu.htm#a48d951202fb92cc1394bfac684037c5d">HostArmQemu</a>.</p>

</div>
</div>
<a class="anchor" id="ac330087c411b5fbfcbce685b8e1ef73d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::setRenderingLayerEnabled </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>enable</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Unknown purpose at this time</p>
<p>Almost the same as <a class="el" href="classHostBase.htm#a8e75d775b407727518e9d202747e4ce6">HostBase::setAppDirectRenderingLayerEnabled</a>, but on a different fb device. Has something to do with blanking, but still don't really understand what this is used for.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">enable</td><td>Unknown. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a5ac0c673700f4ef06d46ec7cbf85239d">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a3b459fdc063dee6483d9289f154a751a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::setupInput </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Starts talking to this device's sensors</p>
<p>Calls both <a class="el" href="classHostArm.htm#a5e0fbcbf0780b2f06f1210c9f131d3d8">HostArm::getInputControlALS()</a> and <a class="el" href="classHostArm.htm#a5e85c0d6aa734edc8d7492b0cde1c2d0">HostArm::getInputControlProximity()</a> to connect to HAL for the sensors. After each, it also subscribes to notifiers for them so when either of them changes value an event is posted to our event queue.</p>
<dl class="section see"><dt>See Also</dt><dd>QSocketNotifier </dd></dl>

</div>
</div>
<a class="anchor" id="affcce2079c29465a3f80593711d68951"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::show </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Grab access to the hardware (including the display and input devices) for use by LunaSysMgr</p>
<p>Run this when you're ready to start using the host to display things. It grabs exclusive access to the screen and input devices (on most devices) so it can actually start displaying graphics on the screen.</p>
<p>Must be overridden per-device since it's fairly device-specific what needs to be enabled to be able to run LunaSysMgr. </p>

<p>Reimplemented from <a class="el" href="classHostBase.htm#aefce63a753901dc2be5aaad540fc8f25">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="ab65be1f72b88c7b49a57656cd10f7aeb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::shutdownInput </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Disconnects from Nyx for each of the sensors</p>
<p>Sensors which are disconnected from include:</p>
<ul>
<li>Ambient light sensor.</li>
<li>Face proximity sensor.</li>
<li>Touch panel.</li>
<li>Control keys (probably either hardware switches or the keyboard).</li>
</ul>
<p>And closes down the Nyx notifiers for:</p>
<ul>
<li>Face proximity sensor.</li>
<li>Ambient light sensor.</li>
</ul>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000007">Todo:</a></b></dt><dd>Figure out whether "control keys" refers to hardware switches or the keyboard. </dd></dl>

</div>
</div>
<a class="anchor" id="a8959d626843be01ef12baeb9fcd8541d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::startService </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Attaches the main GLib event loop for this host to the IPC system</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000008">Todo:</a></b></dt><dd>Confirm this once LSRegister is publicly documented. </dd></dl>

</div>
</div>
<a class="anchor" id="ab997f5a0a3730a053cc3b9149fcad31b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::stopService </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Disconnects the main GLib event loop for this host from the IPC system</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000009">Todo:</a></b></dt><dd>Confirm this once LSUnregister is publicly documented. </dd></dl>

</div>
</div>
<a class="anchor" id="a574fc9862e334e9cced003a502330ec5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QImage HostArm::takeAppDirectRenderingScreenShot </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Takes a screenshot, including anything rendered directly to the display by an app</p>
<p>Currently only implemented on ARM devices, and on them is the same as a regular screenshot.</p>
<dl class="section return"><dt>Returns</dt><dd>An image showing the current state of the display, even if an app has drawn to it directly. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a77b77c3bf9d7a51d43e8109012046229">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="acdb52922ba3ec6d1885c47dc00693e56"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QImage HostArm::takeScreenShot </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Takes a screenshot</p>
<p>Currently only implemented on ARM devices.</p>
<dl class="section return"><dt>Returns</dt><dd>An image showing the current state of the display. </dd></dl>

<p>Reimplemented from <a class="el" href="classHostBase.htm#a4eb89f53ab0a1f0295deeec6ef1e86d4">HostBase</a>.</p>

</div>
</div>
<a class="anchor" id="a20600a23ab56027f41d04ad5215c75b5"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void HostArm::wakeUpLcd </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Turns the LCD on</p>
<p>Not much more to say about this one. The function of it is pretty straightforward. </p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="a387467fdc5e20baceecc37cefe9c3793"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool HostArm::m_bluetoothKeyboardActive</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Whether or not a Bluetooth keyboard is active</p>
<p>Set by <a class="el" href="classHostArm.htm#aa797feaf368a0613258678274c452f03">HostArm::setBluetoothKeyboardActive()</a>. </p>

</div>
</div>
<a class="anchor" id="afa74cff160f96b95de6fead7edf2ae90"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void* HostArm::m_fb0Buffer</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Memory-mapped pointer to /dev/fb0</p>
<p>Write pixel data to this to display it. </p>

</div>
</div>
<a class="anchor" id="aebf5c17cfee39295c0d3ed42a65b94c7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int HostArm::m_fb0Fd</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>File descriptor for the first framebuffer device (/dev/fb0, the LCD)</p>
<p>Initialized by <a class="el" href="classHostArm.htm#afdb1270ae2387bc9240f2c70544025ef">HostArm::init()</a>. </p>

</div>
</div>
<a class="anchor" id="a7a076e7d012b243fbb4ba8e5cf40d1b7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int HostArm::m_fb0NumBuffers</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Number of buffers successfully memory mapped for /dev/fb0</p>
<p>Looks like this is where you can tell how many back buffers have been enabled for the device (in addition to the main buffer). This should be the total number of buffers for the device, including back buffers.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000003">Todo:</a></b></dt><dd>Confirm the documentation on this. </dd></dl>

</div>
</div>
<a class="anchor" id="aac84c466cb884fad04984d3cd1fbec07"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void* HostArm::m_fb1Buffer</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Memory-mapped pointer to /dev/fb1</p>
<p>Write pixel data to this to display it to /dev/fb1. </p>

</div>
</div>
<a class="anchor" id="af45ad66eb3c1f5de79e5155cd9720ed0"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int HostArm::m_fb1Fd</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>File descriptor for the secondary framebuffer device (/dev/fb1, for direct rendering)</p>
<p>Initialized by <a class="el" href="classHostArm.htm#afdb1270ae2387bc9240f2c70544025ef">HostArm::init()</a>. </p>

</div>
</div>
<a class="anchor" id="ad247f0982277462974527e276db9031f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int HostArm::m_fb1NumBuffers</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Number of buffers successfully memory mapped for /dev/fb1</p>
<p>Looks like this is where you can tell how many back buffers have been enabled for the device (in addition to the main buffer). This should be the total number of buffers for the device, including back buffers.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000004">Todo:</a></b></dt><dd>Confirm the documentation on this. </dd></dl>

</div>
</div>
<a class="anchor" id="a342b3bd0c736c90d370f52330aea7072"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a>* HostArm::m_nyxInputControlALS</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Nyx input control for the ambient light sensor</p>
<p>Initialized in <a class="el" href="classHostArm.htm#a5e0fbcbf0780b2f06f1210c9f131d3d8">HostArm::getInputControlALS()</a>. </p>

</div>
</div>
<a class="anchor" id="a813ff4de2735b0618b9da428e7f6c2dc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a>* HostArm::m_nyxInputControlBluetoothInputDetect</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Nyx input control for the whether or not a Bluetooth input device is connected</p>
<p>Initialized in <a class="el" href="classHostArm.htm#a2d3055444437d6d317c5181ba82022e7">HostArm::getInputControlBluetoothInputDetect()</a>.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000005">Todo:</a></b></dt><dd>Confirm that this is what the Bluetooth input detect input control is for. </dd></dl>

</div>
</div>
<a class="anchor" id="af0e31f8f111bc533203c8d799581e2be"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a>* HostArm::m_nyxInputControlKeys</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Nyx input control for the keyboard</p>
<p>Initialized in <a class="el" href="classHostArm.htm#a358b89ea56aea621256391bda37d0b93">HostArm::getInputControlKeys()</a>.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000006">Todo:</a></b></dt><dd>Confirm that this is in fact for the keyboard. </dd></dl>

</div>
</div>
<a class="anchor" id="a5b0d45cb71bf1cf96e24262cb9ad6391"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a>* HostArm::m_nyxInputControlProx</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Nyx input control for the face proximity sensor</p>
<p>Initialized in <a class="el" href="classHostArm.htm#a5e85c0d6aa734edc8d7492b0cde1c2d0">HostArm::getInputControlProximity()</a>. </p>

</div>
</div>
<a class="anchor" id="add36d93acf2f003abfb4a3d4fc8670c3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classInputControl.htm">InputControl</a>* HostArm::m_nyxInputControlTouchpanel</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Nyx input control for the touch panel</p>
<p>Initialized in <a class="el" href="classHostArm.htm#aeec700787178cd33745ad94584007343">HostArm::getInputControlTouchpanel()</a>. </p>

</div>
</div>
<a class="anchor" id="ac0b1f2eca8ce6b8079a8a31ffc1f5955"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classLedControl.htm">LedControl</a>* HostArm::m_nyxLedControlKeypadAndDisplay</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a179a52ab29072b2345215fd09e5c0217"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QSocketNotifier* HostArm::m_nyxLightNotifier</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Watches for changes in the ambient light sensor value and posts events to the event queue when they occur</p>
<p>Initialized by <a class="el" href="classHostArm.htm#a3b459fdc063dee6483d9289f154a751a">HostArm::setupInput()</a>.</p>
<dl class="section see"><dt>See Also</dt><dd>QSocketNotifier </dd>
<dd>
<a class="el" href="classHostArm.htm#a3b459fdc063dee6483d9289f154a751a">HostArm::setupInput()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="aeecbc226fd4cc2ad138090f14ed7177e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">QSocketNotifier* HostArm::m_nyxProxNotifier</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Watches for changes in the face proximity sensor value and posts events to the event queue when they occur</p>
<p>Initialized by <a class="el" href="classHostArm.htm#a3b459fdc063dee6483d9289f154a751a">HostArm::setupInput()</a>.</p>
<dl class="section see"><dt>See Also</dt><dd>QSocketNotifier </dd>
<dd>
<a class="el" href="classHostArm.htm#a3b459fdc063dee6483d9289f154a751a">HostArm::setupInput()</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a8e0dabdfe8c05afa4a552cee42830b18"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classNYXOrientationSensorConnector.htm">NYXOrientationSensorConnector</a>* HostArm::m_OrientationSensor</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Nyx sensor connector for the orientation sensor</p>
<p>Initialized, enabled, and disabled by <a class="el" href="classHostArm.htm#a58a0850f8fa5a17e1288527458e4b68f">HostArm::OrientationSensorOn()</a>. </p>

</div>
</div>
<a class="anchor" id="a24b12b5300a69e884340c4a687e304fb"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">LSHandle* HostArm::m_service</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>IPC system connection</p>
<p>Appears to be initialized by <a class="el" href="classHostArm.htm#a8959d626843be01ef12baeb9fcd8541d">HostArm::startService()</a>. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="HostArm_8h_source.htm">HostArm.h</a></li>
<li><a class="el" href="HostArm_8cpp.htm">HostArm.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="classHostArm.htm">HostArm</a></li>
    <li class="footer">Generated on Fri Jun 21 2013 00:48:48 for luna-sysmgr-common by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
