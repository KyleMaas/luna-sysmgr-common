<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>luna-sysmgr-common: SingletonTimer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">luna-sysmgr-common
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&#160;Pages</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="inherits.htm"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('classSingletonTimer.htm','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classSingletonTimer-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">SingletonTimer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="SingletonTimer_8h_source.htm">SingletonTimer.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4d637ae8651e333ec535b2a7e2de63d8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSingletonTimer.htm#a4d637ae8651e333ec535b2a7e2de63d8">SingletonTimer</a> (GMainLoop *loop)</td></tr>
<tr class="separator:a4d637ae8651e333ec535b2a7e2de63d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d53f176d89ed064c9e539d3ec92aa3a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSingletonTimer.htm#a5d53f176d89ed064c9e539d3ec92aa3a">~SingletonTimer</a> ()</td></tr>
<tr class="separator:a5d53f176d89ed064c9e539d3ec92aa3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af33e214370cf591786e410a1b5b2571b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structTimerHandle.htm">TimerHandle</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSingletonTimer.htm#af33e214370cf591786e410a1b5b2571b">create</a> (<a class="el" href="SingletonTimer_8h.htm#a7fd02b7bc7d9418cb990b7256adb7fa0">TimerCallback</a> callback, void *userArg)</td></tr>
<tr class="separator:af33e214370cf591786e410a1b5b2571b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7675165e7f4b38c867ec1af83ef913ee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSingletonTimer.htm#a7675165e7f4b38c867ec1af83ef913ee">fire</a> (<a class="el" href="structTimerHandle.htm">TimerHandle</a> *timer, uint64_t timeInMs)</td></tr>
<tr class="separator:a7675165e7f4b38c867ec1af83ef913ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4758a5a0ae4fd19593b4cf2614b4e9f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSingletonTimer.htm#ac4758a5a0ae4fd19593b4cf2614b4e9f">ref</a> (<a class="el" href="structTimerHandle.htm">TimerHandle</a> *timer)</td></tr>
<tr class="separator:ac4758a5a0ae4fd19593b4cf2614b4e9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d0df022fadad3ba4921f1c1a670e94c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSingletonTimer.htm#a6d0df022fadad3ba4921f1c1a670e94c">deref</a> (<a class="el" href="structTimerHandle.htm">TimerHandle</a> *timer)</td></tr>
<tr class="separator:a6d0df022fadad3ba4921f1c1a670e94c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ac0990c7dfe3ec0663d30458f7eebc595"><td class="memItemLeft" align="right" valign="top">static uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSingletonTimer.htm#ac0990c7dfe3ec0663d30458f7eebc595">currentTime</a> ()</td></tr>
<tr class="separator:ac0990c7dfe3ec0663d30458f7eebc595"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1012090e8cd5388862b056796925d3d"><td class="memItemLeft" align="right" valign="top">static gboolean&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSingletonTimer.htm#ae1012090e8cd5388862b056796925d3d">timerPrepare</a> (GSource *source, gint *timeout)</td></tr>
<tr class="separator:ae1012090e8cd5388862b056796925d3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a3db6ffd64d3fa99200b20303e93259"><td class="memItemLeft" align="right" valign="top">static gboolean&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSingletonTimer.htm#a7a3db6ffd64d3fa99200b20303e93259">timerCheck</a> (GSource *source)</td></tr>
<tr class="separator:a7a3db6ffd64d3fa99200b20303e93259"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96346750fb1a8d0f5b13c72c1800a79c"><td class="memItemLeft" align="right" valign="top">static gboolean&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classSingletonTimer.htm#a96346750fb1a8d0f5b13c72c1800a79c">timerDispatch</a> (GSource *source, GSourceFunc callback, gpointer userData)</td></tr>
<tr class="separator:a96346750fb1a8d0f5b13c72c1800a79c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classTimer.htm">Timer</a> management utility class</p>
<p>Allows for creation and management of timers which call a callback after a specified time. Also allows for querying of the system clock.</p>
<p>Despite the name, this class is not designed as a true singleton. It's designed to be instantiated once per GLib main loop object to generate timers associated with it. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a4d637ae8651e333ec535b2a7e2de63d8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SingletonTimer::SingletonTimer </td>
          <td>(</td>
          <td class="paramtype">GMainLoop *&#160;</td>
          <td class="paramname"><em>loop</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Constructs a new timer generator</p>
<p><a class="el" href="classSingletonTimer.htm">SingletonTimer</a> is largely implemented using GLib functionality. As such, it needs a GLib main loop structure to tie GLib's timer functions to. That's where this constructor comes in. This ties the <a class="el" href="classSingletonTimer.htm">SingletonTimer</a> object to GLib so other timer users don't need to worry about GLib.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">loop</td><td>The GLib main loop structure to tie the timers to </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5d53f176d89ed064c9e539d3ec92aa3a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SingletonTimer::~SingletonTimer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Clean up resources allocated for timers</p>
<p>Currently unused, but declared nonetheless. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="af33e214370cf591786e410a1b5b2571b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structTimerHandle.htm">TimerHandle</a> * SingletonTimer::create </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="SingletonTimer_8h.htm#a7fd02b7bc7d9418cb990b7256adb7fa0">TimerCallback</a>&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>userArg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Sets up a new timer callback</p>
<p>Timers are set up in a two-stage process. Firstm you set up the function to call, then you set up the timing. This method sets up the callback, which can then be passed into <a class="el" href="classSingletonTimer.htm#a7675165e7f4b38c867ec1af83ef913ee">SingletonTimer::fire()</a> to activate that callback to run at a given time.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">callback</td><td>Pointer to the function to call. </td></tr>
    <tr><td class="paramname">userArg</td><td>Pointer to data to pass to the callback function.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>A <a class="el" href="structTimerHandle.htm">TimerHandle</a> pointer representing the callback function. </dd></dl>

</div>
</div>
<a class="anchor" id="ac0990c7dfe3ec0663d30458f7eebc595"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t SingletonTimer::currentTime </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Gets the number of milliseconds since some system-wide unknown time</p>
<p>Returns the number of milliseconds since some unspecified point in time as given by the system clock. While the "zero" point of this value is arbitrary, it's consistent between every call to it while the program is running. Because of this, it can be used as a very accurate clock for calculating time differences but not absolute time/date values.</p>
<p>Implemented as static since it uses the system-wide clock rather than using GLib. </p>

</div>
</div>
<a class="anchor" id="a6d0df022fadad3ba4921f1c1a670e94c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SingletonTimer::deref </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structTimerHandle.htm">TimerHandle</a> *&#160;</td>
          <td class="paramname"><em>timer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Indicates the a timer callback that a previous pointer to it has been destroyed</p>
<p>Primitive form of reference counting. Keeps track of how many things are using a <a class="el" href="structTimerHandle.htm">TimerHandle</a> and automatically deletes it when nothing needs it any longer.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classSingletonTimer.htm#ac4758a5a0ae4fd19593b4cf2614b4e9f">SingletonTimer::ref()</a> </dd>
<dd>
<a class="el" href="classRefCounted.htm">RefCounted</a> </dd>
<dd>
<a class="el" href="classsptr.htm">sptr</a></dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">timer</td><td>The timer callback that has had a pointer to it destroyed. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7675165e7f4b38c867ec1af83ef913ee"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SingletonTimer::fire </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structTimerHandle.htm">TimerHandle</a> *&#160;</td>
          <td class="paramname"><em>timer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>timeInMs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Activate a timer callback to be called at after a given time period elapses</p>
<p>This method is what actually sets up the timer to run. It takes a callback set up by <a class="el" href="classSingletonTimer.htm#af33e214370cf591786e410a1b5b2571b">SingletonTimer::create()</a> and runs it after the given number of milliseconds have passed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">timer</td><td>A <a class="el" href="structTimerHandle.htm">TimerHandle</a> pointer from <a class="el" href="classSingletonTimer.htm#af33e214370cf591786e410a1b5b2571b">SingletonTimer::create()</a> containing information about the code to run. </td></tr>
    <tr><td class="paramname">timeInMs</td><td>How many milliseconds to wait before calling the function from the "timer" parameter. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ac4758a5a0ae4fd19593b4cf2614b4e9f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SingletonTimer::ref </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structTimerHandle.htm">TimerHandle</a> *&#160;</td>
          <td class="paramname"><em>timer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Indicates to a timer callback that there is a new pointer to it</p>
<p><a class="el" href="structTimerHandle.htm">TimerHandle</a> objects are reference counted like in the <a class="el" href="classsptr.htm">sptr</a> system. <a class="el" href="classSingletonTimer.htm#ac4758a5a0ae4fd19593b4cf2614b4e9f">SingletonTimer::ref()</a> and <a class="el" href="classSingletonTimer.htm#a6d0df022fadad3ba4921f1c1a670e94c">SingletonTimer::deref()</a> are the correct way to indicate how many pointers there are to a timer calkback so they an be automatically cleaned up from memory when everything is done using them.</p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classsptr.htm">sptr</a> </dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000021">Todo:</a></b></dt><dd>Change this to have it use actual smart pointers instead of duplicating the functionality here.</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">timer</td><td>The timer callback that has a new pointer to it. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7a3db6ffd64d3fa99200b20303e93259"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">gboolean SingletonTimer::timerCheck </td>
          <td>(</td>
          <td class="paramtype">GSource *&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="classEvent.htm">Event</a> source function for GLib timers</p>
<p>DO NOT USE. This function should only be called by the GLib functionality within this class.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000023">Todo:</a></b></dt><dd><p class="startdd">Clean this up - having non-callable public methods is a messy way to do things. </p>
<p class="enddd">Figure out how/why this works - GLib documentation on the subject seems to be pretty sparse. </p>
</dd></dl>

</div>
</div>
<a class="anchor" id="a96346750fb1a8d0f5b13c72c1800a79c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">gboolean SingletonTimer::timerDispatch </td>
          <td>(</td>
          <td class="paramtype">GSource *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GSourceFunc&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gpointer&#160;</td>
          <td class="paramname"><em>userData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="classEvent.htm">Event</a> source function for GLib timers</p>
<p>DO NOT USE. This function should only be called by the GLib functionality within this class.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000024">Todo:</a></b></dt><dd><p class="startdd">Clean this up - having non-callable public methods is a messy way to do things. </p>
<p class="enddd">Figure out how/why this works - GLib documentation on the subject seems to be pretty sparse. </p>
</dd></dl>

</div>
</div>
<a class="anchor" id="ae1012090e8cd5388862b056796925d3d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">gboolean SingletonTimer::timerPrepare </td>
          <td>(</td>
          <td class="paramtype">GSource *&#160;</td>
          <td class="paramname"><em>source</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">gint *&#160;</td>
          <td class="paramname"><em>timeout</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="classEvent.htm">Event</a> source function for GLib timers</p>
<p>DO NOT USE. This function should only be called by the GLib functionality within this class.</p>
<dl class="todo"><dt><b><a class="el" href="todo.htm#_todo000022">Todo:</a></b></dt><dd><p class="startdd">Clean this up - having non-callable public methods is a messy way to do things. </p>
<p class="enddd">Figure out how/why this works - GLib documentation on the subject seems to be pretty sparse. </p>
</dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li><a class="el" href="SingletonTimer_8h_source.htm">SingletonTimer.h</a></li>
<li><a class="el" href="SingletonTimer_8cpp.htm">SingletonTimer.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="classSingletonTimer.htm">SingletonTimer</a></li>
    <li class="footer">Generated on Fri Jun 21 2013 00:48:48 for luna-sysmgr-common by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.3.1 </li>
  </ul>
</div>
</body>
</html>
